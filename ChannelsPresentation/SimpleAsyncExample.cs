using System.Threading.Tasks;

namespace ChannelsPresentation
{
    public class SimpleAsyncExample
    {
        public void Run()
        {
            Console.WriteLine("=== –ö–æ—Ä–æ—Ç–∫–∏–π –ø—Ä–∏–º–µ—Ä: –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π vs –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π ===\n");
            
            Console.WriteLine("‚ùå –°–ò–ù–•–†–û–ù–ù–´–ô (–±–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ—Ç–æ–∫):");
            Console.WriteLine(@"
public void SaveUser(User user)
{
    _context.Users.Add(user);
    _context.SaveChanges();        // üî• –ë–õ–û–ö–ò–†–£–ï–¢ –ø–æ—Ç–æ–∫!
    Console.WriteLine(""Saved"");   // –í—ã–ø–æ–ª–Ω–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ë–î
}");

            Console.WriteLine("\n‚úÖ –ê–°–ò–ù–•–†–û–ù–ù–´–ô (–Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ—Ç–æ–∫):");
            Console.WriteLine(@"
public async Task SaveUserAsync(User user)
{
    _context.Users.Add(user);
    await _context.SaveChangesAsync();  // üöÄ –ù–ï –±–ª–æ–∫–∏—Ä—É–µ—Ç!
    Console.WriteLine(""Saved"");        // –ü–æ—Ç–æ–∫ —Å–≤–æ–±–æ–¥–µ–Ω –¥–ª—è –¥—Ä—É–≥–∏—Ö –∑–∞–¥–∞—á
}");

            Console.WriteLine("\nüéØ –†–ê–ó–ù–ò–¶–ê:");
            Console.WriteLine("‚Ä¢ –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π: –ø–æ—Ç–æ–∫ –∂–¥–µ—Ç –ë–î ‚Üí –∑–∞–≤–∏—Å–∞–Ω–∏–µ UI/—Å–µ—Ä–≤–µ—Ä–∞");
            Console.WriteLine("‚Ä¢ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π: –ø–æ—Ç–æ–∫ —Å–≤–æ–±–æ–¥–µ–Ω ‚Üí –æ—Ç–∑—ã–≤—á–∏–≤–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è");
            Console.WriteLine("‚Ä¢ –†–µ–∑—É–ª—å—Ç–∞—Ç: async = –≤ 10-100 —Ä–∞–∑ –±–æ–ª—å—à–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!");
        }
    }
} 